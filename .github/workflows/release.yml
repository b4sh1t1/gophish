name: Build Gophish Release
on:
    release:
        types: [created]

jobs:
    build:
        name: Build Binary
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-latest, ubuntu-latest, macos-latest]
                arch: ['386', amd64]
                include:
                    - os: windows-latest
                      goos: windows
                      bin: 'gophish.exe'
                    - os: ubuntu-latest
                      goos: linux
                      bin: 'gophish'
                    - os: macos-latest
                      goos: darwin
                      bin: 'gophish'
                exclude:
                    - os: windows-latest
                      arch: '386'
                    - os: macos-latest
                      arch: '386'
        steps:
            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                go-version: 1.14
            - run: go version
            - if: matrix.os == 'ubuntu-latest'
              run: sudo apt-get update && sudo apt-get install -y gcc-multilib
            - uses: actions/checkout@v2
            - name: Build ${{ matrix.goos }}/${{ matrix.arch }}
              run: go build -o ${{ matrix.bin }}
              env:
                GOOS: ${{ matrix.goos }}
                GOARCH: ${{ matrix.arch }}
                CGO_ENABLED: 1
            - name: Upload to artifacts
              uses: actions/upload-artifact@v2
              with:
                name: ${{ matrix.goos }}-${{ matrix.arch }}${{ matrix.ext }}
                path: ${{ matrix.bin }}


    package:
        name: Package Assets
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v2
            - uses: actions/download-artifact@v2
              with:
                path: bin
            - name: Package the assets into releases
              run: |
                ls -alR bin/
            # - uses: Upload Releases to Artifacts
            #   with:
            #     # we don't use this yet
            #     path: releases/
    
    # upload:
    #     name: Upload to the Release
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/download-artifact@v2
    #           with:
    #             # Check on this
    #             path: releases/
